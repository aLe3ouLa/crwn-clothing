{"ast":null,"code":"import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionSnapshotsToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollectionsAsync() {\n  yield 1;\n  const collectionRef = firestore.collection('collections'); // collectionRef\n  //   .get()\n  //   .then(snapshot => {\n  //     const collectionsMap = convertCollectionSnapshotsToMap(snapshot);\n  //     dispatch(fetchCollectionsSuccess(collectionsMap));\n  //   })\n  //   .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n}\nexport function* fetchCollectionsStart() {\n  yield takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}","map":{"version":3,"sources":["/Users/alexandra/Downloads/development/crwn-clothing/src/redux/shop/shop.sagas.js"],"names":["takeEvery","ShopActionTypes","firestore","convertCollectionSnapshotsToMap","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollectionsAsync","collectionRef","collection","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,SAAT,EAAoBC,+BAApB,QAA2D,+BAA3D;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,QAAiE,gBAAjE;AAGA,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAM,CAAN;AACA,QAAMC,aAAa,GAAGL,SAAS,CAACM,UAAV,CAAqB,aAArB,CAAtB,CAFqC,CAKjC;AACA;AACA;AACA;AACA;AACA;AACA;AAEP;AAED,OAAO,UAAUC,qBAAV,GAAkC;AACrC,QAAMT,SAAS,CACXC,eAAe,CAACS,uBADL,EAEXJ,qBAFW,CAAf;AAIH","sourcesContent":["import { takeEvery } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionSnapshotsToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\n\n\nexport function* fetchCollectionsAsync() {\n    yield 1;\n    const collectionRef = firestore.collection('collections');\n\n    \n        // collectionRef\n        //   .get()\n        //   .then(snapshot => {\n        //     const collectionsMap = convertCollectionSnapshotsToMap(snapshot);\n        //     dispatch(fetchCollectionsSuccess(collectionsMap));\n        //   })\n        //   .catch(error => dispatch(fetchCollectionsFailure(error.message)));\n      \n}\n\nexport function* fetchCollectionsStart() {\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START, \n        fetchCollectionsAsync\n        );\n}"]},"metadata":{},"sourceType":"module"}