{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInFailure, signInSuccess, signOutFailure, signOutSuccess } from './user.actions';\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* onEmailInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION);\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure());\n  }\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailInStart), call(isUserAuthenticated), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["/Users/alexandra/Downloads/development/crwn-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","auth","googleProvider","createUserProfileDocument","getCurrentUser","signInFailure","signInSuccess","signOutFailure","signOutSuccess","getSnapshotFromUserAuth","userAuth","additionalData","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onGoogleSignInStart","GOOGLE_SIGN_IN_START","onEmailInStart","EMAIL_SIGN_IN_START","isUserAuthenticated","onCheckUserSession","CHECK_USER_SESSION","signOut","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import { takeLatest, put , all , call} from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types';\n\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils'\nimport { signInFailure, signInSuccess, signOutFailure , signOutSuccess} from './user.actions';\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n      const userRef = yield call(\n        createUserProfileDocument,\n        userAuth,\n        additionalData\n      );\n      const userSnapshot = yield userRef.get();\n      yield put(signInSuccess({ id: userSnapshot.id, ...userSnapshot.data() }));\n    } catch (error) {\n      yield put(signInFailure(error));\n    }\n  }\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch(error) {\n        yield put(signInFailure(error))\n\n    }\n}\n\nexport function* signInWithEmail({ payload: {email, password}}) {\n    try {\n        const {user} = yield auth.signInWithEmailAndPassword(email, password);\n        yield getSnapshotFromUserAuth(user);\n\n    } catch(error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(\n        UserActionTypes.GOOGLE_SIGN_IN_START,\n        signInWithGoogle\n        );\n}\n\nexport function* onEmailInStart() {\n    yield takeLatest(\n        UserActionTypes.EMAIL_SIGN_IN_START,\n        signInWithEmail\n        );\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if(!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    }catch (error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(\n        UserActionTypes.CHECK_USER_SESSION\n    )\n}\n\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess())\n    } catch(error) {\n        yield put(signOutFailure())\n    }\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(\n        UserActionTypes.SIGN_OUT_START,\n        signOut\n    )\n}\n\nexport function* userSagas () {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailInStart),\n        call(isUserAuthenticated),\n        call(onSignOutStart)])\n}\n"]},"metadata":{},"sourceType":"module"}