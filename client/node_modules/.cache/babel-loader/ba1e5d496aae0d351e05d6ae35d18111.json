{"ast":null,"code":"var _jsxFileName = \"/Users/alexandra/Downloads/development/crwn-clothing/src/pages/shop/shop.component.jsx\";\nimport React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../Collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component {\n  componentDidMount() {}\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return React.createElement(\"div\", {\n      className: \"shop-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: loading\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  }\n\n}\n\n;\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/alexandra/Downloads/development/crwn-clothing/src/pages/shop/shop.component.jsx"],"names":["React","Component","Route","connect","createStructuredSelector","fetchCollectionsStartAsync","CollectionsOverview","CollectionPage","WithSpinner","selectIsCollectionFetching","CollectionsOverviewWithSpinner","CollectionPageWithSpinner","ShopPage","componentDidMount","render","match","props","path","loading","mapStateToProps","isCollectionFetching","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AAEA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,SAASC,0BAAT,QAA2C,iCAA3C;AAEA,MAAMC,8BAA8B,GAAGF,WAAW,CAACF,mBAAD,CAAlD;AACA,MAAMK,yBAAyB,GAAGH,WAAW,CAACD,cAAD,CAA7C;;AAEA,MAAMK,QAAN,SAAuBX,SAAvB,CAAgC;AAG9BY,EAAAA,iBAAiB,GAAG,CAEnB;;AAEDC,EAAAA,MAAM,GAAE;AACN,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKC,KAAvB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAGD,KAAD,IAAW,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEE;AAA3C,SAAwDF,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAGD,KAAD,IAAW,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAEE;AAAtC,SAAmDF,KAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAf6B;;AAgB7B;AAED,MAAMG,eAAe,GAAGf,wBAAwB,CAAC;AAC/CgB,EAAAA,oBAAoB,EAAEX;AADyB,CAAD,CAAhD;;AAIA,MAAMY,kBAAkB,GAAIC,QAAD,KAAe;AACxCjB,EAAAA,0BAA0B,EAAE,MAAMiB,QAAQ,CAACjB,0BAA0B,EAA3B;AADF,CAAf,CAA3B;;AAIF,eAAeF,OAAO,CAAC,IAAD,EAAOkB,kBAAP,CAAP,CAAkCT,QAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux'\n\nimport { createStructuredSelector } from 'reselect'\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../Collection/collection.component';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\n\nconst CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends Component{\n \n\n  componentDidMount() {\n    \n  }\n  \n  render(){\n    const { match } = this.props;\n    return (\n      <div className='shop-page'>\n        <Route exact path={`${match.path}`} render={(props) => <CollectionsOverviewWithSpinner isLoading={loading} {...props} /> } />\n        <Route path={`${match.path}/:collectionId`} render={(props) => <CollectionPageWithSpinner isLoading={loading} {...props} /> }/>\n      </div>\n    );\n  }\n  };\n\n  const mapStateToProps = createStructuredSelector({\n    isCollectionFetching: selectIsCollectionFetching\n  })\n\n  const mapDispatchToProps = (dispatch) => ({\n    fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n  })\n\nexport default connect(null, mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}