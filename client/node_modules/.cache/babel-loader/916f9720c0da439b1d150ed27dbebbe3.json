{"ast":null,"code":"var _jsxFileName = \"/Users/alexandra/Downloads/development/crwn-clothing/src/components/collection-item/collection-item.component.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './collection-item.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { addItem } from '../../redux/cart/cart.actions';\n\nconst CollectionItem = ({\n  item,\n  addItem\n}) => {\n  const {\n    name,\n    price,\n    imageUrl\n  } = item;\n  return React.createElement(\"div\", {\n    className: \"collection-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"image\",\n    style: {\n      backgroundImage: `url(${imageUrl})`\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"collection-footer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \" \", name), React.createElement(\"span\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \" \", price)), React.createElement(CustomButton, {\n    inverted: true,\n    onClick: () => addItem(item),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \" Add to Cart \"));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addItems: item => dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);","map":{"version":3,"sources":["/Users/alexandra/Downloads/development/crwn-clothing/src/components/collection-item/collection-item.component.jsx"],"names":["React","connect","CustomButton","addItem","CollectionItem","item","name","price","imageUrl","backgroundImage","mapDispatchToProps","dispatch","addItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,+BAAP;AACA,OAAOC,YAAP,MAAyB,0CAAzB;AAEA,SAASC,OAAT,QAAwB,+BAAxB;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAACC,EAAAA,IAAD;AAAOF,EAAAA;AAAP,CAAD,KAAqB;AAExC,QAAM;AAACG,IAAAA,IAAD;AAAOC,IAAAA,KAAP;AAAcC,IAAAA;AAAd,MAA0BH,IAAhC;AAEA,SACA;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACA,IAAA,SAAS,EAAC,OADV;AAEA,IAAA,KAAK,EAAE;AAACI,MAAAA,eAAe,EAAG,OAAMD,QAAS;AAAlC,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAKI;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA0BF,IAA1B,CADJ,EAEI;AAAM,IAAA,SAAS,EAAC,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA2BC,KAA3B,CAFJ,CALJ,EASI,oBAAC,YAAD;AAAc,IAAA,QAAQ,MAAtB;AAAuB,IAAA,OAAO,EAAE,MAAMJ,OAAO,CAACE,IAAD,CAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBATJ,CADA;AAWQ,CAfZ;;AAiBA,MAAMK,kBAAkB,GAAGC,QAAQ,KAAK;AACpCC,EAAAA,QAAQ,EAAEP,IAAI,IAAKM,QAAQ,CAACR,OAAO,CAACE,IAAD,CAAR;AADS,CAAL,CAAnC;;AAIA,eAAeJ,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCN,cAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n\nimport './collection-item.styles.scss';\nimport CustomButton from '../custom-button/custom-button.component';\n\nimport { addItem } from '../../redux/cart/cart.actions';\n\nconst CollectionItem = ({item, addItem}) => {\n    \n    const {name, price, imageUrl} = item;\n    \n    return (\n    <div className=\"collection-item\">\n        <div \n        className=\"image\"\n        style={{backgroundImage: `url(${imageUrl})`}}\n        />\n        <div className=\"collection-footer\">\n            <span className=\"name\"> { name }</span>\n            <span className=\"price\"> { price }</span>\n        </div>\n        <CustomButton inverted onClick={() => addItem(item)}> Add to Cart </CustomButton>\n    </div>)};\n\nconst mapDispatchToProps = dispatch => ({\n    addItems: item =>  dispatch(addItem(item))\n});\n\nexport default connect(null, mapDispatchToProps)(CollectionItem);"]},"metadata":{},"sourceType":"module"}